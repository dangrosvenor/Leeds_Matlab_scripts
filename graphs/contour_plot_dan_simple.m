flags_for_contour_plot_DAN_simple  %set flags by running this script%%%%% set model level (height) %%%%%%%%%%%%ih_wrf=1; %z-level to plot forih_wrf=1; %z-level to plot forswitch file_type    case 'wrfout' %%%%% set time here %%%%%%%%%%%%        time = 17; %16=21 UTC for NCEP run, 11=6 UTC on 6th        time = 3; %16=21 UTC for NCEP run, 45=20 for ECMWF        %      time = idir;         %%%%%%%%%%%%%%%%%     case 'met_em'        time=1;    case 'ecmwf'end% 0=OFF, 1=ONiadd_terrain = 1;  %flag to add the terrain contoursiadd_wind_quivers = 1; %flag to add wind arrowsiplot_latlon=0; %flag to add LAT/LON linesisquare=1; %flag to make the plot square shaped%limit the x and y axes hereiylim=0; %flag ON/OFF for yylims=[300 500]; %y-limits in kmixlim=0; %flag ON/OFF for xxlims=[400 600]; %x-limits for x%%% format of wind arrows (quiver)nx_quiver=25; %number of arrows to draw for xny_quiver=25; %number for yscale_speed_quiver = [5 5]; %max speed expected for x and y [x y]%... reduce both for larger arrows% arrows are scaled according to this speed% i.e. 15 m/s would produce the biggest arrow that looks decent on the plot% so that plots with different wind speeds will produce arrows that consistently proportional to the wind speed                    icolmap=1;colormap_choice='brownblue';colormap_choice='redblue';%colormap_choice='hue saturated';i_reverse_cmap=0; %flag to say if want to reverse colormap directionswitch colormap_choice    case 'brownblue'     %designed for colorblind people            cmap=lbmap(256,'brownblue'); %nice colormap for colorblind people    case 'redblue'         cmap=jet;    case 'hue saturated'         cmap=hsv;endif i_reverse_cmap==1    cmap=flipud(cmap);end%%%%%  ignore this bit below for now - go straight to choosing the thing to plot  %%%%%h_wrf=5.57; %height (km) for which to interpolate forh_wrf=9.03; %height (km) for which to interpolate forh_wrf=2.3; %height (km) for which to interpolate for%        h_wrf=7.5; %height (km) for which to interpolate forh_wrf=1.3; %height (km) for which to interpolate for%%%%%%%%%  control contours hereiovride_conts=0; %set to one if you want to override the contours plottedconts_ovr=[-35:5:5]; %array of contours that you wantclab=0; %label contoursclines=1; %put black lines between coloursicont=1;% set a min or max rangeiminovr=0; %set to one for a min to the rangeimaxovr=0; %set to one for a max to the rangemincovOvr = 0; %min value required (this is ignored if iminovr is set 0)maxcovOvr = 10; %max value required (this is ignored if imaxovr is set 0)ncont=15; %number of contours (roughly)%%%%%%%%% end of control contours %%%%%%%%%%%%%%%%%%switch file_type    case 'wrfout'        Zlev=WRFUserARW(nc,'Z',time,ih_wrf);        terrain = nc{'HGT'}(time,:,:);        medZ=num2str( mean(mean((squeeze(Zlev) - terrain))) ,3 );    case 'met_em'        try            Zlev=nc{'GHT'}(time,ih_wrf,:,:);            terrain = nc{'HGT_M'}(time,:,:);            medZ=num2str( mean(mean((squeeze(Zlev) - terrain))) ,3 );        catch            medZ='';        end    case 'ecmwf'        medZ='';endyear=Times(time,1:4);day=Times(time,9:10);month=Times(time,6:7);hour=Times(time,12:16);month_str=datestr(datenum([year '-' month '-' day]),'mmm');%%%%% choose what to plot here  %%%%        %        short_plot_name=['10m wind speed ' Times(time,9:10) ' Jan ' Times(time,12:16) ' (m s^{-1})'];%          short_plot_name=['Mean condensate (g m^{-2}) up to level 30 for ' filestr];% short_plot_name=['Ice supersaturation (%) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];% short_plot_name=['Hallet Mossop flag at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%  short_plot_name=['Water supersaturation (%) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%         short_plot_name=['Temperature (^{o}C) at ' num2str(h_wrf) ' km for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC for ' filestr];%         short_plot_name=['Potential temperature (K) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC for ' filestr];%         short_plot_name=['Equivalent potential temperature (K) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC for ' filestr];%       short_plot_name=['Vapour mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC for ' filestr];%       short_plot_name=['Condensed water mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Ice water mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Snow water mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Rain water mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Total water mixing ratio (g kg^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Snow and ice precipitation (mm) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Rain precipitation (mm) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Precipitation (mm) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%      short_plot_name=['Precipitation tendency (mm) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Total number concentration(L^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%       short_plot_name=['Rain number concentration(L^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%      short_plot_name=['Ice number concentration(L^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%      short_plot_name=['Snow number concentration(L^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%short_plot_name=['Total condensed water mass (kg) up to ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%        short_plot_name=['Max cloud mixing ratio(g kg^{-1}) up to ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%        short_plot_name=['Max ice number  (L^{-1}) up to level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%        short_plot_name=['Max snow number  (L^{-1}) up to level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' ' month_str ' ' Times(time,12:16) ' UTC '];%         tit(1).tit=['Vertical velocity at level ' num2str(ih_wrf) ' for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC (m s^{-1})'];%       short_plot_name=['Height (m) abv. terrain for level ' num2str(ih_wrf) ' for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC for ' filestr];%        short_plot_name=['Pressure at ' num2str(h_wrf) ' km for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC (hPa)'];%        short_plot_name=['Wind speed at ' num2str(h_wrf) ' km for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC (hPa)'];%        short_plot_name=['Wind speed at ' num2str(p_wrf) ' hPa for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC (hPa)'];%only those below will work at the moment and ignore those aboveshort_plot_name=['Pressure at level ' num2str(ih_wrf) ' for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC (hPa)'];%short_plot_name=['Wind speed (m s^{-1}) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%short_plot_name=['Surface pressure (hPa) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%short_plot_name=['Temperature (^{o}C) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];short_plot_name=['Relative Humidity (%) at level ' num2str(ih_wrf) ' (~' medZ 'm above terrain) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];short_plot_name=['2m air temperature (^{o}C) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%short_plot_name=['10m wind speed (m s^{-1}) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];%short_plot_name=['2m relative humidity (%) for ' Times(time,9:10) ' Jan ' Times(time,12:16) ' UTC'];short_plot_name=['Terrain height ' Times(time,9:10) ' Jan ' Times(time,12:16) ' (m)'];%tit(1).tit=short_plot_name;tit(1).tit=[short_plot_name ' for ' filestr];short_plot_name = tit(1).tit; %might want to comment this out if filename is too longif is_met_em==1    short_plot_name = [short_plot_name ' (analysis)'];    tit(1).tit = [tit(1).tit ' (analysis)'];endizovr=2;i2d=3;idirstamp=0;itimestamp=0;%        ylabelstr='iLatitude';%        xlabelstr='iLongitude';ylabelstr='y (km)';xlabelstr='x (km)';sig=3;%	ncont=28;nplots2d=1;notsame=1;figlab=[tit(1).tit ' 2d plot '];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%savename=[short_plot_name];   % ' ' dirname];%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% end of first switch command %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%timesTH=[hrstartles+((dumprange-1)*dumpint)/3600];scrsz=get(0,'ScreenSize');%posit=[9 50 scrsz(3)/1.01 scrsz(4)/1.2];switch comp    case 'uni'        %    posit=[9 60 scrsz(3)/1.2 scrsz(4)/1.14];        posit=[9 60 scrsz(3)/1.7 scrsz(4)/1.8];    case 'lacieLap'        posit=[9 50 scrsz(3)/1.46 scrsz(4)/2.07];endif subplotting==1    %    posit=[9 50 scrsz(3)/2.4 scrsz(4)/1.5];    posit=[9 50 scrsz(3)/2 scrsz(4)/1.1];    if nsub==1; hf=figure('position',posit,'name',figlab); end    h(iplot).h=subplot(xsub,ysub,nsub);    %     for ih=1:length(h)    %         posh=get(h(ih).h,'position');    %         set(h(ih).h,'position',[posh(1) posh(2) posh(3)-0.2 posh(4)]);    % 	end    posh=get(h(iplot).h,'position');    set(h(iplot).h,'position',[posh(1) posh(2) posh(3)-0.2 posh(4)]);else    hf=figure('position',posit,'name',figlab);    h(iplot).h=subplot(1,1,1);end%nplots2d=length(prof);if nplots2d==1    a=a1;else    a=a2;endb=ceil(min(nplots2d,jmax)/2);phase=2;for  i=1:nplots2d    if subplotting==1        isub=iplot;    else        isub=i;    end    try        if (exist('time') & i2d~=2 & i2d~=1 & i2d~=3); timesTH(i).t=time(dumprange); end    catch        disp(' **** WARNING "if (exist(''time'') & i2d~=2 & i2d~=1 & i2d~=3); timesTH(i).t=time(dumprange)" has failed *****');    end    %exname=strcat('c:/matlabr12/work/bauru/tracersjan2005/force+3_3th3qv/TracerTimH-',num2str(i));    %xdat(i).x=time;    %xdat(i).x=datenum(2004,2,24,hrstartles+floor(xdat(i).x/3600),60*(xdat(i).x/3600-floor(xdat(i).x/3600)),0);    scrsz=get(0,'ScreenSize');    posit=[9 50 scrsz(3)/1.01 scrsz(4)/1.2];    if izovr==0; [izmin izmax]=findheight(z,minZ,maxZ); end    %     if length(iz)>=1    % 		iz=iz(1);    %     else    %         iz=length(z);    %     end    %pcolor(9+time./3600,z(1:iz)./1000,maxLowTracer(i).prof(1:iz,47:80));hc=colorbar;%shading interp    if subplotting==0        h(isub).h=subplot(a,b,isub);    end        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        %%%%%% calculate the WRF data for the plots %%%%%%    contour_plot_WRF_data_calculations%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                maxC(i)=max(max(pdat(i).p));    minC(i)=min(min(pdat(i).p));    if maxC(i)==minC  %if have a constant field then use pcolor otherwise contourf crashes        icont=0;        if minC(i)==0            minC(i)=-1;            maxC(i)=1;        else            minC(i)=minC(i)-minC(i)/2;            maxC(i)=maxC(i)+maxC(i)/2;        end    end    if logflag==1        maxC(i)=log10(max(max(pdat(i).p)));        minC(i)=log10(min(min(pdat(i).p)));        minC(minC==-Inf)=NaN;        maxC(maxC==-Inf)=NaN;        pdat(i).p=log10(pdat(i).p);        pdat(i).p(pdat(i).p==-Inf)=NaN;    end    if dlogflag==1        maxC(i)=dlog(max(max(pdat(i).p)),dlogmin);        minC(i)=dlog(min(min(pdat(i).p)),dlogmin);        pdat(i).p=dlog(pdat(i).p,dlogmin);    end    %to put extrememes of contours on right side but put mostly a continuation of the right hand value to avoid labels at right edge    %    half(i)=abs((izmax-izmin)/2); %changed Nov 2008 -Dan    half(i) = size(pdat(i).p,1)/2;    pend(i)=size(pdat(i).p,2);    npend(i)=max([round(pend*1.25) pend+20]);    nend(i)=max([round((npend-pend)*0.25) 10]);    dumpint=(timesTH(i).t(end)-timesTH(i).t(1))/10;    if dumpint==0        fprintf(1,'***********  PROBLEM - dumpint==0. Check the x-axis values for non-monotonic increase ***********');        break    end    x_grid_orig = timesTH(i).t;    switch right_side_extra_bits        case 1            timesTH(i).t=[timesTH(i).t timesTH(i).t(end)+(dumpint.*(1:npend(i)-pend(i)))];        case 2            timesTH_dummy=[timesTH(i).t timesTH(i).t(end)+(dumpint.*(1:npend(i)-pend(i)))];    end                   end  %for i=1:nplots2d            %%%%%% do the plotting %%%%%%        contour_plot_WRF_plot_commands                 