%Make reff 1.6 and 3.7um reff for the VOCALS+Aqua L3 dataset

%L3file='/home/disk/eos1/d.grosvenor/mat_files_various/CPT/AMSRE_and_MODIS_2006-2010_Aqua.mat';
L3file='/home/disk/eos8/d.grosvenor/mat_files_various/CPT/AMSRE_and_MODIS_2006-2010_Aqua_with_reff37_etc_for2007_only.mat';

%L3=load(L3_file);

L32 = load(L3file,'Cloud_Fraction_Liquid','daynum_timeseries3','modisyear_timeseries3','daynum_timeseries3');

lat_restrict = [-40 0]; lon_restrict = [-140 -68]; %VOCALS to match mock L3 data

L32.MLAT_standard_edges2 = [L32.MLAT+0.5 L32.MLAT(end)-0.5];
L32.MLON_standard_edges2 = [L32.MLON-0.5 L32.MLON(end)+0.5];

ilat_restrict = find(L32.MLAT_standard_edges2>min(lat_restrict) & L32.MLAT_standard_edges2<=max(lat_restrict));
ilon_restrict = find(L32.MLON_standard_edges2>=min(lon_restrict) & L32.MLON_standard_edges2<max(lon_restrict));

homog_tau_Cahalan = exp(Cloud_Optical_Thickness_Liquid_Log_Mean.timeseries3)./Cloud_Optical_Thickness_Liquid_Mean.timeseries3;

modis_vars = {...
'Cloud_Effective_Radius_16_Liquid_Maximum', ...
'Cloud_Effective_Radius_16_Liquid_Mean', ...                                                              
'Cloud_Effective_Radius_16_Liquid_Minimum', ...                                                             
'Cloud_Effective_Radius_16_Liquid_Standard_Deviation', ...                                                   
'Cloud_Effective_Radius_37_Liquid_Maximum', ...                                                      
'Cloud_Effective_Radius_37_Liquid_Mean', ...                                                       
'Cloud_Effective_Radius_37_Liquid_Minimum', ...                                                      
'Cloud_Effective_Radius_37_Liquid_Standard_Deviation', ...
'Cloud_Effective_Radius_Liquid_Maximum', ...                                                       
'Cloud_Effective_Radius_Liquid_Mean', ...                                                    
'Cloud_Effective_Radius_Liquid_Mean_Uncertainty', ...                                              
'Cloud_Effective_Radius_Liquid_Minimum', ...                                                 
'Cloud_Effective_Radius_Liquid_Standard_Deviation', ... 
'Cloud_Optical_Thickness_Liquid_Log_Mean_Uncertainty', ...    
'Cloud_Optical_Thickness_Liquid_Maximum', ...                 
'Cloud_Optical_Thickness_Liquid_Mean', ...                    
'Cloud_Optical_Thickness_Liquid_Mean_Uncertainty', ...       
'Cloud_Optical_Thickness_Liquid_Minimum', ...                
'Cloud_Optical_Thickness_Liquid_Standard_Deviation', ...  
'Cloud_Optical_Thickness_Liquid_Log_Mean'
};

clear itime_restrict
for itime=1:length(daynum_timeseries3)
    it = find(L32.modisyear_timeseries3==modisyear_timeseries3(itime) & L32.daynum_timeseries3==daynum_timeseries3(itime));
    if length(it)>0
        itime_restrict(itime) = it;
    end
end


for ivar=14:length(modis_vars)
    fprintf(1,'Saving var %d of %d \n',ivar,length(modis_vars));
    eval(['L32.' modis_vars{ivar} '.timeseries3 = NaN*ones(size(L32.Cloud_Fraction_Liquid.timeseries3));']);
    eval(['L32.' modis_vars{ivar} '.timeseries3(ilat_restrict,ilon_restrict,itime_restrict) = flipdim(' modis_vars{ivar} '.timeseries3,1);']);        
    save_var_append(L3file,eval(['L32.' modis_vars{ivar}]),[modis_vars{ivar} '_mockL3']);
%    save_var_append(L3file,eval([modis_vars{ivar}]),[modis_vars{ivar}]);    
end

save_var_append(L3file,L32.MLAT,'LAT');
save_var_append(L3file,L32.MLON,'LON');


